<?php

use Commie\CSVColMapper;
use Commie\CSVRow;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-15 at 21:46:59.
 */
class CSVRowTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CSVRow
     */
    protected $object;
    
    /**
     * @var CSVMapper
     */
    protected $mapper;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    	$data = str_getcsv('"Alpha","Beta","Charlie"'); /* Simulate first row of data */
    	
    	$mapper = new CSVColMapper(
    		$data,
    		TRUE
    	);
    	
    	$this->mapper = $mapper;    	
    	
        $this->object = new CSVRow($mapper, 0, $data);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Commie\CSVRow::offset
     * @todo   Implement testOffset().
     */
    public function testOffset()
    {
    	$this->assertEquals(0, $this->object->offset());
    }

    /**
     * @covers Commie\CSVRow::col
     */
    public function testCol()
    {
    	$tData = str_getcsv('"Value1","Value2",""');
        $tRow = new CSVRow($this->mapper, 1, $tData);
        $this->assertEquals("Value2", $tRow->col('Beta')->value());
    }

    /**
     * @covers Commie\CSVRow::isCol
     */
    public function testIsCol()
    {
        $this->assertTrue($this->object->isCol(0));
        $this->assertFalse($this->object->isCol(9999));
        
        $tData = str_getcsv('"Value1","Value2",""');
        
        $tRow = new CSVRow($this->mapper, 1, $tData);
        $this->assertTrue($tRow->isCol('Alpha'));
    }
}
